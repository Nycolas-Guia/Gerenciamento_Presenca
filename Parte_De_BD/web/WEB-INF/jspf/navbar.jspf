<%@ page pageEncoding="UTF-8" %>
<link rel="stylesheet" type="text/css" href="style/styleNavbar.css">
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<div id="session">
    <!-- Começo da NavBar-->   

    <nav v-if="data" class="navbar navbar-dark bg-danger">
        <div class="container-fluid" style="padding: 0px;">
            <a class="navbar-house" href="index.jsp"><i class="bi bi-house-door"></i></a>                    
            <div class="logout bg-danger">
                <form>
                    <span class="navbar-text me-2 text-light"> Olá, {{data.login}} </span>
                    <button @click="logout();" class="btn btn-outline-light" type="button"><i class="bi bi-arrow-right-circle"></i> Sair</button>
                </form>
            </div>            
        </div>
    </nav>    
    <!-- Fim da NavBar-->

    <!-- Começo do LoginForm-->
    <div class="m-2" v-else>
        <center>
            <div class="p-3 container-sm-2">
                <div class="card border-2 bg-danger-subtle border-danger col-sm-3 ">
                    <div class="card-body">
                        <h5 class="card-title">LOGIN</h5>                
                        <form>
                            <div class="row">
                                <label for="formName" class="col-sm-3 col-form-label">Nome:</label>
                                <input type="text" class="form-control border-danger" v-model="loginUsername" maxlength="50" required>
                                <hr/>
                                <label for="formName" class="col-sm-3 col-form-label">Senha:</label>
                                <input type="password" class="form-control border-danger" v-model="loginPass" maxlength="30" required>                        
                                <hr/>
                                <button @click="login()" type="button" class="btn btn-primary" >Entrar</button>
                            </div> 
                        </form>
                    </div>
                </div>
            </div>
        </center>
    </div>
    <div v-if="error && error!=='Nao conectado'" class="alert alert-danger m-2" role="alert">
        {{error}}
    </div>
    <!-- Fim do LoginForm-->

</div>

<script> // Parte que conecta com o banco de dados
    const shared = Vue.reactive({session: null});

    const session = Vue.createApp({
        data() {
            return{
                shared: shared,
                error: null,
                loginUsername: null,
                loginPass: null,
                data: null
            }
        },
        methods: {
            async request(url = "", method, data) {
                try {
                    const response = await fetch(url, {
                        method: method,
                        headers: {"Content-Type": "application/json", },
                        body: JSON.stringify(data)
                    });
                    if (response.status == 200) {
                        return response.json();
                    } else {
                        this.error = response.statusText;
                    }
                } catch (e) {
                    this.error = e;
                    return null;
            }
            },
            async loadSession() {
                const data = await this.request("/Chamada_Final/api/session", "GET");
                if (data) {
                    this.data = data;
                    this.error = null;
                    this.shared.session = this.data;
                }
            },
            async login() {
                const data = await this.request("/Chamada_Final/api/session", "PUT", {"login": this.loginUsername, "senha": this.loginPass});
                if (data) {
                    this.data = data;
                    this.error = null;
                    this.shared.session = this.data;
                }
            },
            async logout() {
                const data = await this.request("/Chamada_Final/api/session", "DELETE");
                if (data) {
                    this.data = null;
                    this.error = null;
                    this.shared.session = this.data;
                }
            }
        },
        mounted() {
            this.loadSession();

        }
    });
    session.mount('#session');
</script>